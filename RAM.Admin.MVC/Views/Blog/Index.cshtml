@model RAM.Admin.Controllers.ViewModels.HomeView

@{
    ViewBag.Title = "Blog Management";
}
<div class="container">
    <div class="row">
        <div class="col-lg-9">
            <div class="pull-right" style="margin-top: 20px;">
                <a href="/Blog/Post" class="btn btn-success" role="button">New Post</a>
            </div>
            <h2>Blog List</h2>
            <hr />
            <div id="bloglist">
                @Html.Partial("_BlogList")
            </div>
        </div>
        <div class="col-lg-3 pull-right">
            <div class="pull-right" style="margin-top: 20px;">
                <a href="#categoryModal" class="editCategoryModal btn btn-success" role="button" data-toggle="modal">Add</a>
            </div>
            <h2>Categories</h2>
            <hr />
            <div id="categoryContainer">
                @Html.Partial("_BlogCategories")
            </div>
            <div class="bg-info">
                &nbsp;
                <hr />
            </div>
            <div class="pull-right">
                <a href="#tagModal" class="editTagModal btn btn-success" role="button" data-toggle="modal">Add</a>
            </div>
            <h2>Tags</h2>
            <hr />
            <div id="tagContainer">
                @Html.Partial("_BlogTags")
            </div>
        </div>
    </div>
    <div id="blogModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h3 id="modalLabel">Add/Edit Blog Post</h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12">
                            Is Active <input id="modalBlogStatus" type="checkbox" /><br />
                            <input id="modalBlogTitle" type="text" class="form-control required" placeholder="Enter Title" /><br />
                            <select name="modalBlogCategory" id="modalBlogCategory" class="form-control">
                                @foreach (var item in Model.BlogCategories)
                                {
                                    <option value="@item.ID">
                                        @item.Name
                                    </option>
                                }
                            </select><br />
                            <input id="modalBlogSEOKeywords" type="text" class="form-control required" placeholder="Enter SEO Keywords" /><br />
                            <textarea id="modalBlogSEODescription" class="form-control" rows="6" placeholder="Enter SEO Description"></textarea><br />
                            Post: <br />
                            <textarea id="modalBlogPost" class="form-control" rows="10" placeholder="Enter Post"></textarea>
                        </div>
                    </div>
                    <hr />
                    <form action="~/Blog/SavePost" class="dropzone" id="dropzoneJsForm">
                        <input name="title" type="hidden" id="hdnTitle" />
                        <input name="status" type="hidden" id="hdnStatus" />
                        <input name="post" type="hidden" id="hdnPost" />
                        <input name="category" type="hidden" id="hdnCategory" />
                        <input name="blogID" type="hidden" id="hdnBlogID" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button id="cancelModal" type="button" class="btn">Cancel</button>
                    <button id="submit-all" type="button" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>

    <div id="categoryModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalCategoryLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h3 id="modalCategoryLabel">Add/Edit Categories</h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <input id="modalCategoryName" type="text" class="form-control required" placeholder="Enter Category" /><br />
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="modal-footer">
                    <button id="cancelCategoryModal" type="button" data-dismiss="modal" class="btn">Cancel</button>
                    <button id="saveCategory" type="button" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>

    <div id="tagModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalTagLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h3 id="modalTagLabel">Add/Edit Tag</h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <input id="modalTagName" type="text" class="form-control required" placeholder="Enter Tag" /><br />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cancelTagModal" type="button" data-dismiss="modal" class="btn">Cancel</button>
                    <button id="saveTag" type="button" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        tinymce.init({
            selector: "textarea#modalBlogPost",
            plugins: ["spellchecker code fullscreen"],
            toolbar: "insertfile undo redo | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | forecolor backcolor emoticons"
        });

        //#region Tags
        
        $("#tagContainer").on('click', '.editTagsModal', function (e) {
            e.preventDefault();
            var tagid = $(this).data('id');
            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/GetTagByID',
                type: 'POST',
                data: JSON.stringify({ id: tagid }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    console.log(data.Message);
                    $("#saveTag").data('id', data.TagRef.ID);
                    $("#modalTagName").val(data.TagRef.Name);
                }
            });
        });

        $("#tagContainer").on('click', '.deleteTag', function (e) {
            e.preventDefault();

            if (!confirm("Do you want to delete")) {
                return false;
            }

            var tagid = $(this).data('id');
            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/DeleteTag',
                type: 'POST',
                data: JSON.stringify({ id: tagid }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    $("#tagContainer").html("");
                    $("#tagContainer").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/TagList');
                    $('#tagContainer').effect("highlight", { color: "#7fd658" }, 1000);

                }
            });
        });


        $("#saveTag").on('click', function (e) {
            e.preventDefault();

            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/SaveTag',
                type: 'POST',
                data: JSON.stringify({ Name: $("#modalTagName").val(), ID: $(this).data('id') }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    $("#tagModal").modal('hide');
                    $("#tagContainer").html("");
                    $("#tagContainer").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/TagList');
                    $('#tagContainer').effect("highlight", { color: "#7fd658" }, 1000);

                }
            });

        });


        //#endregion

        /* Start Categories */


        $("#categoryContainer").on('click', '.editCategoryModal', function (e) {
            e.preventDefault();
            console.log($(this).data('id'));
            var tagid = $(this).data('id');
            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/GetCategoryByID',
                type: 'POST',
                data: JSON.stringify({ id: tagid }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    console.log(data.Message);
                    $("#saveCategory").data('id', data.CategoryRef.ID);
                    $("#modalCategoryName").val(data.CategoryRef.Name);
                },
                error: function (x, y, z) {
                    console.log(x + '\n' + y + '\n' + z);
                }
            });
        });

        $("#categoryContainer").on('click', '.deleteCategory', function (e) {
            e.preventDefault();

            if (!confirm("Do you want to delete")) {
                return false;
            }

            var tagid = $(this).data('id');
            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/DeleteCategory',
                type: 'POST',
                data: JSON.stringify({ id: tagid }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    $("#categoryContainer").html("");
                    $("#categoryContainer").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/CategoryList');
                    $('#categoryContainer').effect("highlight", { color: "#7fd658" }, 1000);

                }
            });
        });


        $("#saveCategory").on('click', function (e) {
            e.preventDefault();

            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/SaveCategory',
                type: 'POST',
                data: JSON.stringify({ Name: $("#modalCategoryName").val(), ID: $(this).data('id') }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    $("#modalCategoryName").val("");
                    $("#categoryModal").modal('hide');
                    $("#categoryContainer").html("");
                    $("#categoryContainer").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/CategoryList');
                    $('#categoryContainer').effect("highlight", { color: "#7fd658" }, 1000);

                }
            });

        });

        /* End Categories */

        /* Start Blogs */
        var blogID;
        $("#bloglist").on('click', '.editBlogModal', function (e) {
            e.preventDefault();
            blogID = $(this).data('id');
            console.log($(this).data('category'));
            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/GetByID',
                type: 'POST',
                data: JSON.stringify({ id: blogID }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    console.log(data.Message);

                    $("#submit-all").data('id', data.BlogRef.ID);
                    $("#modalBlogTitle").val(data.BlogRef.Title);
                    $("#modalBlogStatus").prop('checked', data.BlogRef.IsActive);
                    $("#modalBlogPost").val(data.BlogRef.Post);
                }
            });
            $("[name=modalBlogCategory]").val($(this).data('category'));
            $("#hdnBlogID").val($(this).data('id'));

        });

        $("#tagContainer").on('click', '.deleteTag', function (e) {
            e.preventDefault();

            if (!confirm("Do you want to delete")) {
                return false;
            }

            var tagid = $(this).data('id');
            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/DeleteTag',
                type: 'POST',
                data: JSON.stringify({ id: tagid }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    $("#tagContainer").html("");
                    $("#tagContainer").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/TagList');
                    $('#tagContainer').effect("highlight", { color: "#7fd658" }, 1000);

                }
            });
        });


        $("#saveTag").on('click', function (e) {
            e.preventDefault();

            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/SaveTag',
                type: 'POST',
                data: JSON.stringify({ Name: $("#modalTagName").val(), ID: $(this).data('id') }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    $("#tagModal").modal('hide');
                    $("#tagContainer").html("");
                    $("#tagContainer").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/TagList');
                    $('#tagContainer').effect("highlight", { color: "#7fd658" }, 1000);

                }
            });

        });

        function SaveBlogDetails() {
            var blog = {
                title: $("#modalBlogTitle").val(),
                post: $("#modalBlogPost").val(),
                category: $("#modalCategory").val(),
                isactive: $("#modalBlogStatus").val(),
                id: blogID
            }

            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/SaveBlogObj',
                type: 'POST',
                dataType: "json",
                data: JSON.stringify(person),
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    console.log(data.Message);
                    $("#bloglist").html("");
                    $("#bloglist").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/BlogList');
                    $('#bloglist').effect("highlight", { color: "#7fd658" }, 1000);
                },
                error: function (x, y, z) {
                    console.log(x + '\n' + y + '\n' + z);
                }
            });
        }


        Dropzone.options.dropzoneJsForm = {

            //prevents Dropzone from uploading dropped files immediately
            autoProcessQueue: false,
            maxFiles: 1,
            maxFilesize: 3,
            addRemoveLinks: true,
            parallelUploads: 1,

            init: function () {
                var submitButton = document.querySelector("#submit-all");
                var cancelButton = document.querySelector("#cancelModal");
                var filesadded = false;
                var myDropzone = this; //closure


                function getDropZoneInstance() {
                    return myDropzone;
                }

                dropZoneInstance = getDropZoneInstance;

                submitButton.addEventListener("click", function () {


                    $("#hdnTitle").val($("#modalBlogTitle").val());
                    $("#hdnPost").val($("#modalBlogPost").val());
                    $("#hdnCategory").val($("#modalBlogCategory").val());
                    $("#hdnBlogStatus").val($("#modalBlogStatus").val());
                    console.log(filesadded);
                    if (filesadded) {
                        myDropzone.processQueue();
                    } else {
                        SavePortfolioDetails();
                        $("#blogModal").modal('hide');
                    }
                });

                document.querySelector("button#cancelModal").addEventListener("click", function () {

                    myDropzone.removeAllFiles();
                    $('#blogModal').modal('hide');
                    $("#bloglist").html("");
                    $("#bloglist").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/BlogList');
                });

                this.on("processing", function () {
                    myDropzone.options.autoProcessQueue = true;
                });


                this.on("success", function (file, response) {
                    if (response.Status == "success") {
                        $("#bloglist").html("");
                        $("#bloglist").load('@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Blog/BlogList');
                    }
                });

                this.on("complete", function (file) {
                    this.removeFile(file);
                });

                this.on("removedfile", function (file) {
                    DeleteFileFromServer(file);
                });

                this.on("drop", function (event) {
                    filesadded = true;
                });
            }
        };

        /* End Blogs */


    });
</script>