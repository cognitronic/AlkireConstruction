@model RAM.Admin.Controllers.ViewModels.HomeView
@{
    ViewBag.Title = "Portfolio Management";
}
<div class="container">
    <div class="row">
        <h2 class="pull-left">Portfolio Mangement</h2>
        <div class="pull-right" style="margin-top: 20px;">
            <a href="#portfolioModal" class="editModal btn btn-success" role="button" data-toggle="modal">New Project</a>
        </div>
    </div>
    <div class="row">
        <hr />
        <div id="portfolioList">
            @Html.Partial("_PortfolioList")
        </div>
    </div>
    <div id="portfolioModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h3 id="modalLabel">Add/Edit Portfolio</h3>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <input id="modalTitle" type="text" class="form-control" placeholder="Enter Title" /><br />
                            <input type="text" id="modalProjectDate" placeholder="Enter Project Date" class="datepicker form-control" /><br />
                            <select name="modalCategory" id="modalCategory" class="form-control">
                                @foreach (var item in Enum.GetValues(typeof(RAM.Core.Domain.Project.ProjectType)))
                                {
                                    <option value="@((int)item)">
                                        @item
                                    </option> 
                                }
                            </select><br />
                            <textarea id="modalDescription" class="form-control" rows="4" placeholder="Enter Description"></textarea>
                        </div>
                    </div>
                    <hr />
                    <form action="~/Portfolio/SavePortfolio" class="dropzone" id="dropzoneJsForm">
                        <input name="title" type="hidden" id="hdnTitle" />
                        <input name="description" type="hidden" id="hdnDescription" />
                        <input name="category" type="hidden" id="hdnCategory" />
                        <input name="projectDate" type="hidden" id="hdnProjectDate" />
                        <input name="portfolioID" type="hidden" id="hdnPortfolioID" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Cancel</button>
                    <button id="submit-all" type="button" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        //TODO: Refactor all of this code out into another file and into manageble functions

        $(".datepicker").datepicker({
            format: 'mm/dd/yyyy'
        });

        var projectImages = [];

        $(".editModal").on('click', function (e) {
            e.preventDefault();
            @*var banners = @Html.Raw(Json.Encode(Model.Banners));
            var banner = banners[$(this).data('id') - 1 ];*@

            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Portfolio/GetPortfolioImages',
                type: 'POST',
                data: JSON.stringify({ id: $(this).data('id') }),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    projectImages = data.Paths.split(',');
                    //buildImages(Dropzone.options.dropzoneJsForm);

                }
            });


            $("#modalTitle").val($("#title_" + $(this).data('id')).text().trim());
            $("#modalDescription").val($("#description_" + $(this).data('id')).text().trim());
            $("[name=modalCategory]").val($(this).data('category'));
            $("#modalProjectDate").val($("#projectdate_" + $(this).data('id')).text().trim());
            $("#hdnPortfolioID").val($(this).data('id'));
        });

        $(".deletePortfolio").on('click', function(e){
            e.preventDefault();
            if (!confirm("Are you sure you want to delete?")){
                return false;
            }
            $.ajax({
                url: '@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]' + '/Portfolio/DeletePortfolio',
                type: 'POST',
                data: JSON.stringify({id: $(this).data('id')}),
                dataType: "json",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    window.location = data.ReturnUrl;
                    $('#portfolioList').effect("highlight", { color: "#7fd658" }, 1000);
                },
                error: function (x, y, z) {
                    alert(x + '\n' + y + '\n' + z);
                }
            });
        });

        function buildImages(dz)
        {
            for (var i = 0; i < projectImages.length; i++) {
                var mockFile = { name: "MockTurtle", size: 12345 };

                // Call the default addedfile event handler
                dz.emit("addedfile", mockFile);

                // And optionally show the thumbnail of the file:
                dz.emit("thumbnail", mockFile, '@System.Configuration.ConfigurationManager.AppSettings["PublicBaseUrl"]' + '@System.Configuration.ConfigurationManager.AppSettings["PortfolioImageURL"]' + projectImages[i].ImagePath);
            }


            // If you use the maxFiles option, make sure you adjust it to the
            // correct amount:
            var existingFileCount = projectImages.length; // The number of files already uploaded
            dz.options.maxFiles = dz.options.maxFiles - existingFileCount;
        }


        Dropzone.options.dropzoneJsForm = {

            //prevents Dropzone from uploading dropped files immediately
            autoProcessQueue: false,
            maxFiles: 5,
            maxFilesize: 3,
            addRemoveLinks: true,
            parallelUploads: 5,

            init: function () {
                var submitButton = document.querySelector("#submit-all");
                var myDropzone = this; //closure
               
               
                
                submitButton.addEventListener("click", function () {


                    $("#hdnTitle").val($("#modalTitle").val());
                    $("#hdnDescription").val($("#modalDescription").val());
                    $("#hdnCategory").val($("#modalCategory").val());
                    $("#hdnProjectDate").val($("#modalProjectDate").val());


                    myDropzone.processQueue();
                });

                this.on("processing", function () {
                    myDropzone.options.autoProcessQueue = true;
                });


                this.on("success", function(file, response){
                    if(response.Status == "success"){
                        window.location = response.ReturnUrl;
                        $('#portfolioList').effect("highlight", { color: "#7fd658" }, 1000);
                        $("#modalTitle").val("");
                        $("#modalDescription").val("");
                        $("#portfolioModal").modal('hide');
                        $("#portfolioList").load('@Url.Action("PortfolioList","Portfolio")');
                        //banners = Html.Raw(Json.Encode(Model.Projects));
                    }
                });

                this.on("complete", function(file){
                    this.removeFile(file);
                });

                this.on("addedfile", function () {
                   
                });
            }
        };

    });
</script>

